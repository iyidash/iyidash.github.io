

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Chirpy</title>
  <subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle>
  <updated>2022-03-20T20:35:50+08:00</updated>
  <author>
    <name>your_full_name</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator>
  <rights> © 2022 your_full_name </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>TITLE</title>
    <link href="http://localhost:4000/posts/ripples-without-rendertexture/" rel="alternate" type="text/html" title="TITLE" />
    <published>2022-03-20T17:30:00+08:00</published>
  
    <updated>2022-03-20T17:30:00+08:00</updated>
  
    <id>http://localhost:4000/posts/ripples-without-rendertexture/</id>
    <content src="http://localhost:4000/posts/ripples-without-rendertexture/" />
    <author>
      <name>your_full_name</name>
    </author>

  
    
    <category term="blogging" />
    
    <category term="test" />
    
  

  
    <summary>
      





      简易水波纹（不使用RenderTexture和粒子系统）


  简易水波的生成只需要 中心位置 信息即可，其余美术效果可以在shader里实现。

  由于shader不能暂存信息，所以需要脚本将角色位置信息传递过来

  （geometry shader 可以暂存信息？）aaaa



    实现方式
    Custom FunctionCustom Function代码参考
	Script代码参考
    参考效果
    拓展波光粼粼 Shadergraph波光粼粼参考效果


实现方式：


  
    将角色位置以一定时间间隔储存到一个数组中 Vector4 waterRipples[]
  
  
    将单个水波纹存活时间储存在 waterRipples.w 中

    （时间最好需要考虑到角色是否移动，跳跃等）
  
  
    将 waterRippl...
    </summary>
  

  </entry>

  
  <entry>
    <title>ShaderGraph实现</title>
    <link href="http://localhost:4000/posts/Shader%E5%AE%9E%E7%8E%B02D%E4%BA%BA%E7%BE%A4%E5%8A%A8%E7%94%BB/" rel="alternate" type="text/html" title="ShaderGraph实现" />
    <published>2022-03-20T17:30:00+08:00</published>
  
    <updated>2022-03-20T19:02:07+08:00</updated>
  
    <id>http://localhost:4000/posts/Shader%E5%AE%9E%E7%8E%B02D%E4%BA%BA%E7%BE%A4%E5%8A%A8%E7%94%BB/</id>
    <content src="http://localhost:4000/posts/Shader%E5%AE%9E%E7%8E%B02D%E4%BA%BA%E7%BE%A4%E5%8A%A8%E7%94%BB/" />
    <author>
      <name>your_full_name</name>
    </author>

  
    
    <category term="blogging" />
    
    <category term="test" />
    
  

  
    <summary>
      





      ShaderGraph实现2D人群动画


  通过 uv 结合帧动画等方式实现状态不一的人群，例如高低不同，颜色不同，帧动画播放速度不同，人群间隔不同等，并且可以通过 linerenderer 来规划路径。
局限：在平面上效果最佳，且不能有太大的倾斜角度



    实现方式uv.x设置间隔设置sprite sheet设置
	拓展


testA


  用以前画的一段序列动画来做演示，颜色随机和高低以及速度等没有设置很明显。


O.

  


A.


B.


C.


实现方式：


  最重要的一点是利用世界坐标x的值来作为uv.x值。
其余效果大致从这展开。


testB


  
    将世界坐标的x轴作为uv.x，uv.y暂时先保持不变。这样就可以做到随意改变宽度却不影响列数。

    因为uv.y不变所以可以使用 linerenderer 来做上下坡的效...
    </summary>
  

  </entry>

</feed>


